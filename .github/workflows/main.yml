name: Main
on: workflow_dispatch

env:
  HAXE_VERSION: 4.3.6

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: Windows
          os: windows-latest
          buildArgs: windows
          artifactName: windowsBuild
          artifactPath: export/release/windows/bin/*
        - name: Linux
          os: ubuntu-latest
          buildArgs: linux
          artifactName: linuxBuild
          artifactPath: export/release/linux/bin/*
        - name: macOSIntel
          os: macos-13
          buildArgs: mac
          artifactName: macOSBuild-x86_64
          artifactPath: export/release/macos/bin/*
        - name: macOSArm
          os: macos-15
          buildArgs: mac
          artifactName: macOSBuild-arm64
          artifactPath: export/release/macos/bin/*
        - name: Android
          os: macos-15
          buildArgs: "android -ONLY_ARMV7"
          artifactName: androidBuild
          artifactPath: export/release/android/bin/app/build/outputs/apk/release/*.apk
        - name: iOS
          os: macos-15
          buildArgs: "ios -nosign"
          artifactName: iOSBuild
          artifactPath: export/release/ios/build/Release-iphoneos/*.ipa

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Install libVLC
        if: matrix.name == 'Linux'
        run: sudo apt install libvlc-dev libvlccore-dev

      - name: Install Libraries
        run: |
          haxelib install hmm --quiet
          haxelib run hmm install --quiet

      - name: Configure Android
        if: matrix.name == 'Android'
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_arm64
          haxelib run lime config ANDROID_SETUP true

      - name: Compile
        run: haxelib run lime build ${{ matrix.buildArgs }}

      - name: Make IPA
        if: matrix.name == 'iOS'
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r FPSPlus.ipa Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.artifactName }}
          path: ${{ matrix.artifactPath }}
          if-no-files-found: error
